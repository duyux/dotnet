//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ICarRentalService")]
public interface ICarRentalService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/CalculatePrice", ReplyAction="http://tempuri.org/ICarRentalService/CalculatePriceResponse")]
    double CalculatePrice(System.DateTime pickupDate, System.DateTime returnDate, string pickupLocation, string vehicllePreferenct);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/CalculatePrice", ReplyAction="http://tempuri.org/ICarRentalService/CalculatePriceResponse")]
    System.Threading.Tasks.Task<double> CalculatePriceAsync(System.DateTime pickupDate, System.DateTime returnDate, string pickupLocation, string vehicllePreferenct);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICarRentalServiceChannel : ICarRentalService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CarRentalServiceClient : System.ServiceModel.ClientBase<ICarRentalService>, ICarRentalService
{
    
    public CarRentalServiceClient()
    {
    }
    
    public CarRentalServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public CarRentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CarRentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CarRentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public double CalculatePrice(System.DateTime pickupDate, System.DateTime returnDate, string pickupLocation, string vehicllePreferenct)
    {
        return base.Channel.CalculatePrice(pickupDate, returnDate, pickupLocation, vehicllePreferenct);
    }
    
    public System.Threading.Tasks.Task<double> CalculatePriceAsync(System.DateTime pickupDate, System.DateTime returnDate, string pickupLocation, string vehicllePreferenct)
    {
        return base.Channel.CalculatePriceAsync(pickupDate, returnDate, pickupLocation, vehicllePreferenct);
    }
}
